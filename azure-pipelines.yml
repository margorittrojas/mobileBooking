trigger:
  - develop

pool:
  vmImage: "macOS-latest"

steps:
  - script: npm install
    displayName: "NPM Install Dependencies"

  - script: npm run clean-build
    displayName: "NPM Clean & Build"

  - bash: |
      $ANDROID_HOME/tools/bin/sdkmanager --list
    displayName: 'list already installed Android packages'

  - bash: | 
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-29;google_apis;x86' 
      echo "AVD system-image successfully downloaded and installed." 
    displayName: 'Download and install emulator image' 
    condition: ne(variables.AVD_IMAGES_RESTORED, 'true')

  - bash: | 
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n android_emulator -k 'system-images;android-29;google_apis;x86' --force --device 'Nexus 6'
      nohup $ANDROID_HOME/emulator/emulator -avd android_emulator -skin 1080x1920 -no-snapshot -no-audio -no-boot-anim -accel auto -gpu auto -qemu -lcd-density 420 > /dev/null 2>&1 & 
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
      adb devices
      adb -s emulator-5554 install ./app/"$(ls ./app/)"
      adb shell am start -n us.lynk.consumer/.MainActivity
    displayName: 'Create and start emulator'

  - bash: | 
      ./gradlew connectedDebugAndroidTest --stacktrace 
      ./gradlew --stop 
    displayName: 'Run Instrumented Tests' 
    continueOnError: true

  - script: npm run start-mobile
    displayName: "Start Automated Tests"

  - script: |
      npm run clean-report
    condition: always()
    displayName: "Create Allure Report"

  - task: ArchiveFiles@2
    displayName: "Compress Allure Report"
    condition: always()
    inputs:
      rootFolderOrFile: "allure-report"
      includeRootFolder: true
      archiveType: "zip"
      archiveFile: "allure-report/allure-report.zip"

  - task: PublishPipelineArtifact@1
    displayName: "Publish Allure Report"
    condition: always()
    inputs:
      targetPath: "allure-report/allure-report.zip"
      artifactName: allure-report

  - task: PublishTestResults@2
    displayName: 'JUnit Report'
    condition: always()
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "results*.xml"
      searchFolder: "./junit-results"
      failTaskOnFailedTests: true
